# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:
    inputs:
      buildTarget:
        description: 'Build Target (e.g. iphone, android, etc..)'
        required: true
        default: 'iosDebug'
  push:
    tags: "*"

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
      env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Setup Maven Action
      uses: s4u/setup-maven-action@v1.6.0
      with:
        java-version: 11
        maven-version: '3.6.3'
    - name: Install osslsigncode
      run: brew install osslsigncode
    - name: Install MacOS Certificates
      uses: apple-actions/import-codesign-certs@v1
      with: 
        p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
        p12-password: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
    - name: Build
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_2FA_PASSWORD: ${{ secrets.APPLE_2FA_PASSWORD }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        JDEPLOY_MAC_DEVELOPER_CERTIFICATE_NAME: ${{ secrets.DEVELOPER_ID_CERTIFICATE_NAME }}
        JDEPLOY_MAC_DEVELOPER_ID: ${{ secrets.APPLE_ID }}
        AUTHENTICODE_SPC: ${{ secrets.AUTHENTICODE_SPC }}
        AUTHENTICODE_KEY: ${{ secrets.AUTHENTICODE_KEY }}
      run: bash release.sh
